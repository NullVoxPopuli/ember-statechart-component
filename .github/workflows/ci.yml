name: CI
"on":
  pull_request: null
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * 0 "
env:
  CI: true
  dist: ember-statechart-component/dist
jobs:
  install_dependencies:
    name: Install Dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3

  eslint:
    name: ESLint
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        path:
          - ./ember-statechart-component
          - ./testing/ember-app
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - name: ESLint
        run: cd ${{ matrix.path }} && pnpm run lint:js

  build:
    name: Build Tests
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - name: Build and Assert Output
        run: |-
          echo 'target: ember-statechart-component/dist
          setup:
            run: pnpm build:js
            cwd: ./ember-statechart-component
          expect: |
            index.js
            index.js.map
            index.d.ts
            glint.d.ts
            glint.d.ts.map
            glint.js
            glint.js.map
          ' >> assert-contents.config.yml
                        npx assert-folder-contents
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
  tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - name: Download built package from cache
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter ember-app run test:ember

  floating-deps-tests:
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          args: '--no-lockfile'
      - name: Download built package from cache
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter ember-app run test:ember

  try-scenarios:
    name: ${{ matrix.ember-try-scenario }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs:
      - tests
    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-5.1
          - ember-5.4
          - ember-release
          - ember-beta
          - ember-canary
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - name: Download built package from cache
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ${{ env.dist }}
      - name: test
        working-directory: ./testing/ember-app
        run: >-
          node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }}
          --skip-cleanup

  typescript-compatibility:
    name: ${{ matrix.typescript-scenario }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - build
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@5.0
          - typescript@5.1
          - typescript@5.2
          - typescript@5.3
    steps:
      - uses: actions/checkout@v3
      - uses: wyvox/action-setup-pnpm@v3
      - name: Download built package from cache
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ${{ env.dist }}
      - name: Update TS Version
        run: pnpm add --save-dev ${{ matrix.typescript-scenario }}
        working-directory: ./testing/ember-app
      - name: Type checking
        run: >-
          pnpm --filter ember-app exec tsc -v; pnpm --filter ember-app exec
          glint --version; pnpm --filter ember-app exec glint
